'input variables have to be linked to correct cells in input spreadsheet!

Sub Dark_Magic()
    
'00_VARIABLES USED IN THE MACRO_____________________________________________________________________________________________________________________________

    Dim counterco As Integer    'variable used for going through companies
    Dim month As Integer        'variable setting month to current reporting period, used as a check before hard pasting values
    Dim companyname As String   'variable specifying name of sheet within workbook for companies
    Dim groupname As String     'variable specifying name of sheet within workbook for groups
    Dim countergroup As Integer 'supporting variable for going through groups
    Dim reportperiod As String  'variable to set reporting period
    Dim startpoint As Integer   'determines selection of companies to be updated from table
    Dim endpoint As Integer     'determines selection of companies to be updated from table
    Dim startco As String       'start company
    Dim endco As String         'end company
    Dim startp As Integer       'determines selection of roups to be updated from table
    Dim endp As Integer         'determines selection of roups to be updated from table
    Dim startgroup As String    'start company
    Dim endgroup As String      'end company
    Dim answer As Integer       'yes/no to run macro
    Dim LIFORpath As String     'input folder
    Dim delay As String         'delay between actions
    Dim starttime As Double     'timer
    Dim minselapsed As String   'timer
    Dim macroexcel As String    'name of excel with the macro
    Dim LIFORexcel As String    'name of LIFOR excel
    Dim Offsetter As Integer    'offset value
    Dim updatecheck As String   'updatecheck
    Dim updatechecknr As Integer 'updatecheck number
    
    
'01_INPUTS FROM EXCEL WITH MACRO____________________________________________________________________________________________________________________________
    
    'sets the name of the workbook with the macro
    macroexcel = ActiveWorkbook.Worksheets("Inputs").Range("L6")
    
    'sets month on cover to this value, tests IF for hard paste
    month = Workbooks(macroexcel).Worksheets("Inputs").Range("C7")
    
    'sets offset value
    Offsetter = Workbooks(macroexcel).Worksheets("Inputs").Range("C7")
        
    'sets reporting period in pivottables to this value
    reportperiod = Workbooks(macroexcel).Worksheets("Inputs").Range("C8")
    
    'selects companies to be updated based on number in the table
    startpoint = Workbooks(macroexcel).Worksheets("Inputs").Range("H10")
    endpoint = Workbooks(macroexcel).Worksheets("Inputs").Range("J10")
    startco = Workbooks(macroexcel).Worksheets("Inputs").Range("D10")
    endco = Workbooks(macroexcel).Worksheets("Inputs").Range("F10")
    
    'selects groups to be updated based on number in the table
    startp = Workbooks(macroexcel).Worksheets("Inputs").Range("H11")
    endp = Workbooks(macroexcel).Worksheets("Inputs").Range("J11")
    startgroup = Workbooks(macroexcel).Worksheets("Inputs").Range("D11")
    endgroup = Workbooks(macroexcel).Worksheets("Inputs").Range("F11")
    
    'specifies input folder for confirmation purposes
    LIFORpath = Workbooks(macroexcel).Worksheets("Inputs").Range("D17")
    
    'specifies filename of LIFOR excel
    LIFORexcel = Workbooks(macroexcel).Worksheets("Inputs").Range("D16")
    
    'selects time delay in second between actions
    delay = Workbooks(macroexcel).Worksheets("Inputs").Range("G24")
    
    
'02_CONFIRMATION OF SELECTED INPUTS_________________________________________________________________________________________________________________________

    'Shows confirmation box before running the macro
    answer = MsgBox( _
        "Do you really want to perform update LIFOR with the following specification?" & vbCrLf & vbCrLf & _
        "Reporting Period ID: " & reportperiod & vbCrLf & _
        "Companies: [" & startco & ":" & endco & "]" & vbCrLf & _
        "Groups: [" & startgroup & ":" & endgroup & "]" & vbCrLf & _
        "In folder: [" & LIFORpath & "]", vbQuestion + vbYesNo + vbDefaultButton2, "Inputs")

    If answer = vbYes Then
    
        'starts the timer
        starttime = Timer
      
        Workbooks.Open filename:=LIFORpath, UpdateLinks:=0
      
        'Checks if month on cover is different from selected month, peforms following actions if Yes
        If Workbooks(LIFORexcel).Worksheets("Cover").Range("E21") = month - 1 Then
        
        
'03_FCFE BRIDGE HARD PASTE OF PREVIOUS MONTH VALUES_________________________________________________________________________________________________________
            
            'hard pastes values from previous month on FCFE bridge sheet
            Workbooks(LIFORexcel).Worksheets("FCFE").Activate
            Application.Wait (Now + TimeValue(delay))
        
            With Workbooks(LIFORexcel).Worksheets("FCFE")
                .Range("H23:H33").Value = .Range("E23:E33").Value
                .Range("H52:H62").Value = .Range("E52:E62").Value
            End With
                
             
'04_PASTE OF FUNCTION FOR HOLDCOs___________________________________________________________________________________________________________________________
'
'            If Workbooks(LIFORexcel).Worksheets("Cover").Range("C4") <> month Then
'
'                Workbooks(LIFORexcel).Worksheets("HoldCos").Range("D8:D273").Offset(0, Offsetter - 1).Copy
'                Workbooks(LIFORexcel).Worksheets("HoldCos").Range("D8:D273").Offset(0, Offsetter).PasteSpecial Paste:=xlPasteFormulas
'
'            End If
            
         
'05_HARD PASTE OF PRIOR MONTH VALUES FOR SINGLE COMPANIES___________________________________________________________________________________________________
               
            'counter goes through the table and repeats code for each company
            For counterco = startpoint To endpoint
                                
                'selects file to be modified
                companyname = Workbooks(macroexcel).Worksheets("Companies").Range("C1").Offset(counterco, 0)
                      
                'activates sheet
                Workbooks(LIFORexcel).Sheets(companyname).Activate
                Application.Wait (Now + TimeValue(delay))
                
                'pastes as functions for a current month in LC instruments
                Range("F166:F249").Offset(0, month - 2).Select
                Application.CutCopyMode = False
                Selection.Copy
                Range("F166:F249").Offset(0, month - 1).Select
                Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                    SkipBlanks:=False, Transpose:=False
                                
                'hard pastes prior month values in LC
                Range("F10:F256").Offset(0, month - 2).Value = Range("F10:F256").Offset(0, month - 2).Value
                Application.Wait (Now + TimeValue(delay))
                
                'hard pastes prior month values in EUR
                Range("AE10:AE256").Offset(0, month - 2).Value = Range("AE10:AE256").Offset(0, month - 2).Value
                Application.Wait (Now + TimeValue(delay))
                
                'group and collapse past months in LC and EUR
                
                'Chr(65) = A
                'Chr(69) = E
                'Chr(70) = F
                
                Columns(Chr(70) & ":" & Chr(68 + month)).Select
                Selection.Columns.Group
                
                Columns(Chr(65) & Chr(69) & ":" & Chr(65) & Chr(67 + month)).Select
                Selection.Columns.Group
                
                Workbooks(LIFORexcel).Sheets(companyname).Outline.ShowLevels ColumnLevels:=1
                
                'update check
                updatecheck = updatecheck & " " & updatechecknr & ". " & companyname
                updatechecknr = updatechecknr + 1
                
            Next
            
            
'06_PASTE AS FUNCTIONS OF PRIOR MONTH CHECK VALUES FOR GROUPS_____________________________________________________________________________________________________________
            
            'counter goes through the table and repeats code for each group
            For countergroup = startp To endp
                
                'selects file to be modified
                groupname = Workbooks(macroexcel).Worksheets("Groups").Range("B1").Offset(countergroup, 0)
                      
                'activates sheet
                Workbooks(LIFORexcel).Worksheets(groupname).Activate
                Application.Wait (Now + TimeValue(delay))
                
                'pastes as function check values in EUR
                Range("AE281:AE294").Offset(0, month - 2).Select
                Selection.Copy
                Range("AE281:AE294").Offset(0, month - 1).Select
                Selection.PasteSpecial Paste:=xlPasteFormulas, Operation:=xlNone, _
                    SkipBlanks:=False, Transpose:=False
                Application.Wait (Now + TimeValue(delay))
                
                'test
                Columns(Chr(70) & ":" & Chr(68 + month)).Select
                Selection.Columns.Group
                
                Columns(Chr(65) & Chr(69) & ":" & Chr(65) & Chr(67 + month)).Select
                Selection.Columns.Group
                
                Workbooks(LIFORexcel).Sheets(groupname).Outline.ShowLevels ColumnLevels:=1
                                     
                updatecheck = updatecheck & " " & updatechecknr & ". " & groupname
                updatechecknr = updatechecknr + 1
                
            Next
                
         End If
         
     
'06_UPDATE OF PIVOT TABLES__________________________________________________________________________________________________________________________________
        
'        'updates reporting period on sheet IN03_05_65
'        Workbooks(LIFORexcel).Sheets("IN03_05_65").Activate
'         Application.Wait (Now + TimeValue(delay))
'        Workbooks(LIFORexcel).Sheets("IN03_05_65").PivotTables("DS - ReCo - PROD - v2").PivotFields( _
'         "[Fact_Finance].[Reporting Period Id].[Reporting Period Id]").VisibleItemsList _
'         = Array("[Fact_Finance].[Reporting Period Id].&" & reportperiod)
'        Application.Wait (Now + TimeValue(delay))
'
'        'updates reporting period on sheet IN05_65_INS
'        Workbooks(LIFORexcel).Sheets("IN05_65_INS").Activate
'         Application.Wait (Now + TimeValue(delay))
'        Workbooks(LIFORexcel).Sheets("IN05_65_INS").PivotTables("DS - ReCo - PROD - v2").PivotFields( _
'         "[Fact_Financial_Instrument].[Reporting Period Id].[Reporting Period Id]"). _
'         VisibleItemsList = Array( _
'         "[Fact_Financial_Instrument].[Reporting Period Id].&" & reportperiod)
'        Application.Wait (Now + TimeValue(delay))
'
'        'updates reporting period on sheet IN05_65_INS_Agr_Lim
'        Workbooks(LIFORexcel).Sheets("IN05_65_INS_Agr_Lim").Activate
'         Application.Wait (Now + TimeValue(delay))
'        Workbooks(LIFORexcel).Sheets("IN05_65_INS_Agr_Lim").PivotTables("DS - ReCo - PROD - v2").PivotFields( _
'         "[Fact_Financial_Instrument].[Reporting Period Id].[Reporting Period Id]"). _
'         VisibleItemsList = Array( _
'         "[Fact_Financial_Instrument].[Reporting Period Id].&" & reportperiod)
'        Application.Wait (Now + TimeValue(delay))
'
'        Workbooks(LIFORexcel).Worksheets("Cover").Range("C4") = month
        
        
'07_CLOSING AND TIME ELAPSED ANNOUNCEMENT___________________________________________________________________________________________________________________
    
        'saves and closes workbook
        Workbooks(LIFORexcel).Sheets("Cover").Activate
        Application.Wait (Now + TimeValue(delay))
        Workbooks(LIFORexcel).Save
        'Workbooks(LIFORexcel).Close
            
        'stops the timer
        MinutesElapsed = Format((Timer - starttime) / 86400, "hh:mm:ss")
        
        'outputs completion MsgBox
        MsgBox "Update was completed in " & MinutesElapsed & ".", vbInformation
        
    End If

MsgBox (updatecheck)

End Sub
